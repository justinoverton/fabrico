{"version":3,"sources":["../modules/fantasy.js"],"names":["fabrico","require","name","exports","markov","gender","list","humanEyes","elfEyes","halfElfEyes","oneOf","dwarfEyes","gnomeEyes","hair","adventurer","profession","commonInventory","repeat","professionInventory","drunkard","wizard","tokens","literal","flip","fighter","rogue","inventory","char","ret","get","prof","other","concat","human","map","race","eyes","elf","halfElf","helfElf","dwarf","gnome","character"],"mappings":"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","file":"fantasy.js","sourcesContent":["'use strict'\n\nconst fabrico = require('./fabrico');\nlet name = exports.name = fabrico.markov(require('./data/names/roman-name'));\nlet gender = exports.gender = fabrico.list(['male', 'female']);\n\nlet humanEyes = fabrico.list(['brown', 'blue', 'green', 'hazel']);\nlet elfEyes = fabrico.list(['brown', 'blue', 'green', 'white', 'silver', 'black']);\nlet halfElfEyes = fabrico.oneOf(humanEyes, elfEyes);\nlet dwarfEyes = fabrico.list(['brown', 'dark brown', 'black']);\nlet gnomeEyes = fabrico.list(['blue', 'green', 'red', 'orange']);\n\n//I'm lazy\nlet hair = fabrico.list(['brown', 'blonde', 'red', 'gray', 'white', 'silver']);\n\nlet adventurer = fabrico.list('wizard', 'fighter', 'rogue');\nlet profession = fabrico.oneOf('baker', 'smith', 'carpenter', 'elder', 'councilman', 'peasant', 'drunkard', 'commoner', 'noble', adventurer);\n\nlet commonInventory = fabrico.list(['dagger', 'necklace', 'ring']).repeat(0, 3);\nlet professionInventory = {\n    drunkard: fabrico.list(['beer', 'ale', 'whiskey']),\n    wizard: fabrico.tokens('spellbook', \n                           fabrico.literal('scrollcase').flip(),\n                           fabrico.list(['quarterstaff', 'wand', 'crossbow'])),\n    fighter: fabrico.tokens('armor', \n                       fabrico.literal('shield').repeat(0, 1),\n                       fabrico.list(['sword', 'dagger', 'crossbow', 'bow', 'axe'])),\n    rogue: fabrico.tokens('lock picks', \n                           fabrico.literal('contraband').repeat(0, 1),\n                           fabrico.list(['disguise kit', 'dagger', 'bow']))\n};\n\nlet inventory = function(char) {\n    \n    let ret = commonInventory.get();\n    let prof = char.profession;\n    if(!prof)\n        return ret;\n    \n    let other = professionInventory[prof];\n    if(!other)\n        return ret;\n    \n    return ret.concat(other.get());\n};\n\nlet human = exports.human = fabrico.map({name: name, race: 'human', gender: gender, eyes: humanEyes, hair: hair, profession: profession, inventory: inventory});\nlet elf = exports.elf = fabrico.map({name: name, race: 'elf', gender: gender, eyes: elfEyes, hair: hair, profession: profession, inventory: inventory });\nlet halfElf = exports.helfElf =fabrico.map({name: name, race: 'half-elf', gender: gender, eyes: halfElfEyes, hair: hair, profession: profession, inventory: inventory });\nlet dwarf = exports.dwarf = fabrico.map({name: name, race: 'dwarf', gender: gender, eyes: dwarfEyes, hair: hair, profession: profession, inventory: inventory });\nlet gnome = exports.gnome = fabrico.map({name: name, race: 'gnome', gender: gender, eyes: gnomeEyes, hair: hair, profession: profession, inventory: inventory });\n\nlet character = exports.character = fabrico.oneOf(human, elf, dwarf, gnome, halfElf);\n"]}